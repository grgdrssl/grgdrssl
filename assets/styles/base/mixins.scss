//
// Mixins
// --------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q

@mixin facit-light {
    font-family: "jaf-facitweb", "Helvetica Neue", sans-serif;
    font-weight: 300;
    font-style: normal;
}

@mixin facit-light-italic {
    font-family: "jaf-facitweb", "Helvetica Neue", sans-serif;
    font-weight: 300;
    font-style: italic;
}

@mixin facit-bold {
    font-family: "jaf-facitweb", "Helvetica Neue", sans-serif;
    font-weight: 700;
    font-style: normal;
}

@mixin facit-bold-italic {
    font-family: "jaf-facitweb", "Helvetica Neue", sans-serif;
    font-weight: 700;
    font-style: italic;
}

@mixin work-img-border {
    border: 1px solid #eee;
}

@mixin cf {
  	&:before,
  	&:after {
		content: "";
		display: table;
  	}
  	&:after {
		clear: both;
  	}
}

@mixin reset-list-style {
  	list-style: none;
  	margin: 0;
}

@mixin truncate($truncation-boundary){
  	max-width:$truncation-boundary;
  	white-space:nowrap;
  	overflow:hidden;
  	text-overflow:ellipsis;
}


// Webkit-style focus
// ------------------
@mixin tab-focus() {
  	outline: thin dotted #333;
  	outline: 5px auto -webkit-focus-ring-color;
  	outline-offset: -2px;
}

// Placeholder text
// -------------------------
@mixin placeholder($color: $placeholder-text) {
  &	:-moz-placeholder {
		color: $color;
  	}
  	&:-ms-input-placeholder {
		color: $color;
  	}
  	&::-webkit-input-placeholder {
		color: $color;
  	}
}


// FONTS
// --------------------------------------------------

@mixin font-family-serif() {
  	font-family: $serif-font-family;
}
@mixin font-family-sans-serif() {
  	font-family: $sans-font-family;
}


// FORMS
// --------------------------------------------------




// Mixin for form field states
@mixin formFieldState($text-color: #555, $borderColor: #ccc, $backgroundColor: #f5f5f5) {
  // Set the text color
  	.control-label,
  	.help-block,
  	.help-inline {
		color: $text-color;
  	}
  	// Style inputs accordingly
  	.checkbox,
  	.radio,
  	input,
  	select,
  	textarea {
		color: $text-color;
  	}
  	input,
  	select,
  	textarea {
		border-color: $borderColor;
		@include box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
		&:focus {
	  		border-color: darken($borderColor, 10%);
	  		@include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($borderColor, 20%));
		}
  	}
  	// Give a small background color for input-prepend/-append
  	.input-prepend .add-on,
  	.input-append .add-on {
		color: $text-color;
		background-color: $backgroundColor;
		border-color: $text-color;
  	}
}



// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
	 -moz-border-radius: $radius;
		  border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: $radius;
	  -moz-border-radius-topleft: $radius;
		  border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
	  -moz-border-radius-topright: $radius;
		  border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
	  -moz-border-radius-bottomright: $radius;
		  border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
	  -moz-border-radius-bottomleft: $radius;
		  border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
  	@include border-top-right-radius($radius);
  	@include border-top-left-radius($radius);
}
@mixin border-right-radius($radius) {
  	@include border-top-right-radius($radius);
  	@include border-bottom-right-radius($radius);
}
@mixin border-bottom-radius($radius) {
  	@include border-bottom-right-radius($radius);
  	@include border-bottom-left-radius($radius);
}
@mixin border-left-radius($radius) {
  	@include border-top-left-radius($radius);
  	@include border-bottom-left-radius($radius);
}

// Drop shadows
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
	 -moz-box-shadow: $shadow;
		  box-shadow: $shadow;
}

// Transitions
@mixin transition($transition...) {
  -webkit-transition: $transition;
	 -moz-transition: $transition;
	   -o-transition: $transition;
		  transition: $transition;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
	 -moz-transition-delay: $transition-delay;
	   -o-transition-delay: $transition-delay;
		  transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration) {
  -webkit-transition-duration: $transition-duration;
	 -moz-transition-duration: $transition-duration;
	   -o-transition-duration: $transition-duration;
		  transition-duration: $transition-duration;
}
@mixin transition-transform($transition) {
  -webkit-transition: -webkit-transform $transition;
	 -moz-transition: -moz-transform $transition;
	   -o-transition: -o-transform $transition;
		  transition: transform $transition;
}

// Transformations
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
	 -moz-transform: rotate($degrees);
	  -ms-transform: rotate($degrees);
	   -o-transform: rotate($degrees);
		  transform: rotate($degrees);
}
@mixin scale($ratio) {
  -webkit-transform: scale($ratio);
	 -moz-transform: scale($ratio);
	  -ms-transform: scale($ratio);
	   -o-transform: scale($ratio);
		  transform: scale($ratio);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
	 -moz-transform: translate($x, $y);
	  -ms-transform: translate($x, $y);
	   -o-transform: translate($x, $y);
		  transform: translate($x, $y);
}
@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
	 -moz-transform: skew($x, $y);
	  -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
	   -o-transform: skew($x, $y);
		  transform: skew($x, $y);
  -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
	 -moz-transform: translate3d($x, $y, $z);
	   -o-transform: translate3d($x, $y, $z);
		  transform: translate3d($x, $y, $z);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility){
  -webkit-backface-visibility: $visibility;
	 -moz-backface-visibility: $visibility;
		  backface-visibility: $visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
@mixin background-clip($clip) {
  -webkit-background-clip: $clip;
	 -moz-background-clip: $clip;
		  background-clip: $clip;
}

// Background sizing
@mixin background-size($size) {
  -webkit-background-size: $size;
	 -moz-background-size: $size;
	   -o-background-size: $size;
		  background-size: $size;
}


// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
	 -moz-box-sizing: $boxmodel;
		  box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
	 -moz-user-select: $select;
	  -ms-user-select: $select;
	   -o-user-select: $select;
		  user-select: $select;
}



// Opacity
@mixin opacity($opacity) {
  	opacity: $opacity;
  	filter: alpha(opacity=$opacity);
}



// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
@mixin translucent-background($color: $white, $alpha: 1) {
  	background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin translucent-border($color: $white, $alpha: 1) {
  	border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
  	@include background-clip(padding-box);
}


// Gradients
@mixin gradient-horizontal($startColor: #555, $endColor: #333) {
  	background-color: $endColor;
  	background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
  	background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  	background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  	background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
  	background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
  	background-repeat: repeat-x;
  	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down
}
@mixin gradient-vertical($startColor: #555, $endColor: #333) {
  	background-color: mix($startColor, $endColor, 60%);
  	background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
  	background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  	background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  	background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
  	background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
  	background-repeat: repeat-x;
  	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}
@mixin gradient-directional($startColor: #555, $endColor: #333, $deg: 45deg) {
  	background-color: $endColor;
  	background-repeat: repeat-x;
  	background-image: -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
  	background-image: -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  	background-image: -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
  	background-image: linear-gradient($deg, $startColor, $endColor); // Standard, IE10
}
@mixin gradient-radial($innerColor: #555, $outerColor: #333)  {
  	background-color: $outerColor;
  	background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
  	background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
  	background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
  	background-image: -o-radial-gradient(circle, $innerColor, $outerColor);
  	background-repeat: no-repeat;
}
@mixin reset-filter() {
  	filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
}




// Z-INDEX
// --------------------------------------------------
//
@mixin z-100 {z-index: 100;}
@mixin z-200 {z-index: 200;}
@mixin z-300 {z-index: 300;}
@mixin z-400 {z-index: 400;}
@mixin z-500 {z-index: 500;}
@mixin z-600 {z-index: 600;}
@mixin z-700 {z-index: 700;}
@mixin z-800 {z-index: 800;}
@mixin z-900 {z-index: 900;}


// RETINA
// --------------------------------------------------
//
@mixin retinize($file, $type, $width, $height) {
  	background-image: url('../img/' + $file + '.' + $type);

  	@media #{$is-hidpi} {

		& {
	  		background-image: url('../img/' + $file + '-2x' + $type);
	  		background-size: $width $height;
		}
  	}
}
// sample use
// .icon {
//   @include retinize('img-name', 'png', 24px, 24px);
// }



//
// Responsive Mixins
// --------------------------------------------------
$small:             767px;
$medium:            768px;
$large:             992px;
$xlarge:            1280px;

@mixin responsive($width) {
  @if $width == small {
      @media screen and (max-width: $small) {
          @content;
      }
    }
    @else if $width == medium {
    @media screen and (min-width: $medium) {
        @content;
    }
    }
    @else if $width == large {
    @media screen and (min-width: $large) {
        @content;
    }
    }
    @else if $width == xlarge {
    @media screen and (min-width: $xlarge) {
        @content;
    }
    }
}
